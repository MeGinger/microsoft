微软Hiring Event， Azure组
第一轮，在一个数组里面找重复的数字，只有一个重复。设计电梯
第二轮，设计一个类，支持add， remove，和randomRemove， LC有原题
第三轮，给定两个字符串，输出第一个String里第一个也出现在第二个String的字符。假设自己是java的开发人员进行设计
第四轮，具体忘了，‍‌‌‌‌‌‌‌‍‌‍‌‌‍‌‌‍‍‍好像也是lc原题。
之间夹杂着BQ，题都做出来了，但是没给offer。。。。



1. DNS服务的design 每个ip到网址有个 ttl。 超过这个时间就会无效。 要考虑large scale. 丽特扣的腰寺溜 
2. 输入一个数字 a 如果是1 - 10,000,000 就看之前有没有这个数 返回boolean。 如果是-1 就要打印出之前有过的所有数字。memory只有3MB


3. 丽特扣的期腰溜 generic class

4. Return longest path in the tree




每轮会问一两道BQ题，然后做题， 四轮都是coding， 居然没有design

1. 非常nice的国人小哥， 题目是LFU， 我讲解了思路， 然后给出了完美解， 小哥问了些scale 和 unit testing的case
2. ABC小哥， 两道题， 实现ReadWriteLock， 还有一道是 操作符前置那道题， 求和， 只要实现加和减， LC好像有类似的题，忘记题号了。
    这个小哥非常热心， 每当遇到我写的代码有bug， 恨不得直接上去帮我修改。
3. 东欧大哥manager， 东欧口音加含着嘴说话，说的还很快， 实在没办法听懂他说什么， 题目是LC尔思凌， 这道题没做出来，怪不得别人
4. 一个笑容满面还非常健谈的LY， 一道BQ后就是coding， 题目是一个graph，要求switch child node， 就像tree switch左右子树那样，
   这一轮是我面的最好的一轮， 也是沟通交流最多的一轮， 因为LY就画了一个图，什么都没给出，我很清楚的问清了他的目的，因为树的node的child
   一般都是一个list， 我问他给出我graph node的结构， 期初他敷衍了事，说就是普通的graph node， 我说你不给出结构没法继续，他才给出了node
  的结构， 然后我很清楚的问清他是不是要reverse child list里面的nodes， 他说是了， 都问清楚了， 我才开始coding， 最开始写了一个BFS， 完全bug free，
  然后我要跟他过一遍代码， 他说不用了， 他说他都懂了， 一副很满意的样子， 然后问能不能用recursive实现， 我也写出了基本bug free的代码， 然后要解释代码的
  时候， 他又说不用了， 不住说perfect， 全程都笑眯眯。
  
  
  
  
  
8/12 软家的Business Application Group onsite. 不知道是不是我去晚了 111大楼附近停车位都满了最后挺到99大楼附近的车库里了。 进去领badge然后喝水坐着，等着人把我们领进去，然后每人安排一个小屋子，放了东西出来拿餐盒集合听注意事项，然后就回屋等面试官来了。
我感觉我的面经不是很典型，就不设积分限制了，觉得有帮助的话给我点米就好了：）
第一轮：一位senior sde，BQ，讲了讲他们做的事情，问了问我过去的project，然后出了道找BST里一个node的predecessor和successor的问题 https://www.geeksforgeeks.org/in ... ssor-given-key-bst/ 
第二轮：一上来问了些我比较盲点的东西，关键是这一轮面试官像是东欧人口音有点不适应。 Http vs Https. Cookie会带来什么问题，
什么page可以read cookie什么不可以。 举个Cache的例子cache是什么样的为什么用cache就好了。 我感觉我答的还可以了但是可以感觉到他极其不满意，
也不是很乐意解释他的问题。 然后让我design dictionary，key是string比如“apple”， value是int比如“1”，要有get（key），set（key，value）的功能，
get要O(1). 不能用hashmap啥的。这题我一直在问他问题，解释我的想法，最后没写完。感觉要跪就跪在这一轮了。
Trie Tree


第三轮：一个又高又壮的大叔，问了我很多bq。从之前的project我做的啥，我做了啥我最自豪，到我的每一天是如何度过的，我每一天最兴奋的一小时是什么时候，leader需要具备什么特质，teammate需要具备什么特质。问题是一个SQL相关的东西，（看到题目当时我脑袋就蒙了我心思面完回来分享面经不整积分限制了，这一个个的都不是很普适啊感觉，要么有点简单要么有点偏）sql 里有个table叫names， 然后里面是很多人名按字母顺序排列，然后有个application会读这个sql，用户输入几个字后会跳转到相应人名的位置，比如输入了”mar“，然后application里就会显示name list并且第一位是”mary XXXX"这种，旁边有个scroll，问这个scroll在什么位置，我说我不会sql语言，但是讲了下大概如何找到这个位置，他给了举了个sql语句的例子我就照猫画虎的说了一下还蒙对了。然后follow up是如何减少对这个sql的访问，不用百分百精确大概在正确位置附近就行，我说加个cache，他说也行但是不加cache咋做，提示了我一下我心想不会按照M在a-z中的位置吧。。。是的就是这样，然后我提出不同字母开头的人数会不一样，还没说完面试官很激动的说对然后说通过weight来给定一个offset position。大概意思就是比如101个人里M的offset position是57这样。然后让我写个method再来通过input string来get position，具体细节我忘了，不过很简单。
第四轮：一个manager迟到了十来分钟，吓得我在小屋里瑟瑟发抖以为三轮完事就要回家了。进来后跟我讲了一堆面试本身的概念，
就是面试的过程是一个双向选择对他们和对我来说‍‌‌‌‌‌‌‌‍‌‍‌‌‍‌‌‍‍‍在几十分钟里做决定都很难。问我今天面试体验如何blabla。
我脸上笑嘻嘻心里想跟我聊这些干嘛别废话了是不是凉了直说吧。然后问了我过去的project。问了我如何适应改变，这里我想起了我丰富的reorg经历有点上头，
说了特别多跑题了，然后他把我拽了回来我又点题的说了几句。最后剩十分钟让我做个题。。。打印出一个二叉树到所有叶节点的路径。讲道理这种题有点白给的意思，
但我中间有几个细节处理的不太好被他挑出来了。


1. 2 sum。 follow up 是closest 2sum。秒杀。问测试用例的时候，面试官不满意，让我测python的int overflow。面试官不知道python的max int和系统内存有关, 说应该和c#一样有异常抛出。orz
2. zig zag 打印 BT。先给了个递归的解，但是会按续存每一层node， 用到额外的space。follow 1: 用 iterative的方法做， 给了bfs。 follow 2: 用递归但是不要额外的space，没想出来，经提醒，把每一层放入list，pass到下一层的call里面。这个pass到下一层的list不是额外的space啊喂
3. 给一个list of 圆，返回是否有重叠的圆。圆class 里面有圆点坐标x，y 和半径r。给了DC的做法（按照c.x-c.r排序后， 如果x方向有重合则分为一组，然后对每一组进行查重），进一步优化的话，还可以再对y方向做同样操作。
4. str1是否是str2的子列，双指针秒掉。第二题是乌刘，秒掉。做第二题的时候，面试官说，写的时候不要和我解释每一步了，你写完了再和我讲。。。然后就听见他在打字，不知道在干嘛。。。follow up：不用额外的space，把输入的list in place sort。然后还剩15分钟，他就让我一步一步跑他给的例子，五分钟跑‍‌‌‌‌‌‌‌‍‌‍‌‌‍‌‌‍‍‍完，
就开始问bq了。问语言的时候，感觉面试官对我会的语言有concern，他们组主要是c#，而我只会python，go和java。。
